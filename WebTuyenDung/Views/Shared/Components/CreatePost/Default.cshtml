@using Microsoft.AspNetCore.Mvc.ModelBinding;
@using System.Text.Json;
@using WebTuyenDung.Constants;
@model WebTuyenDung.ViewModels.CreatePostViewModel

@{
    var areaName = TempData.Peek(ViewConstants.VIEW_AREA);
    var backToPreviousPageUrl = (string?)areaName == "employer" ? "/employer/posts?isApproved=0" : "/admin/posts";

    var rawError = TempData["error"] as string;
    var error = rawError == null ? null : JsonSerializer.Deserialize<HashSet<string>>(rawError);
}

<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <div class="card-header py-2">
                    <h4 class="header-title mb-0">Tạo bài viết</h4>
                </div>
                <div class="collapse pt-3 show">
                    <form method="post" action="/posts/create" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group align-items-center row">
                                @Html.LabelFor(model => model.Title, "Tên bài viết", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextAreaFor(model => model.Title, new { @class = "form-control" })
                                    @if (error != null && error.Contains("Title"))
                                    {
                                        <span class="text-danger">Title cannot be empty</span>
                                    }
                                </div>
                            </div>

                            <div class="form-group align-items-center row">
                                @Html.LabelFor(model => model.Image, "Ảnh chính", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    <input name="Image" type="file" accept="image/*" />
                                    @if (error != null && error.Contains("Image"))
                                    {
                                        <span class="text-danger">Image must be selected</span>
                                    }
                                </div>
                            </div>

                            <div class="form-group align-items-center row">
                                @Html.LabelFor(model => model.Content, "Nội dung", new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Content, new { @class = "form-control", id = "txtNoiDung" })
                                    @if (error != null && error.Contains("Content"))
                                    {
                                        <span class="text-danger">Content cannot be empty</span>
                                    }
                                </div>
                            </div>

                            <div class="form-group align-items-center row mt-3">
                                <div class="col-md-2">
                                    <a href="@backToPreviousPageUrl" class="btn btn-light">Trở về</a>
                                </div>

                                <div class="col-md-6">
                                    <input type="submit" value="Tạo mới" class="btn btn-primary" />
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>